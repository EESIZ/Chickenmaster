image: python:3.12

stages:
  - lint
  - type_check
  - test

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.pip-cache"

cache:
  paths:
    - .pip-cache/

before_script:
  - python -V
  - pip install --upgrade pip
  - pip install black ruff mypy pytest pytest-cov

# 코드 포맷팅 검사 (black)
format:
  stage: lint
  script:
    - pip install black
    - black --check --diff .

# 코드 린팅 (ruff)
lint:
  stage: lint
  script:
    - pip install ruff
    - ruff check .

# 타입 체크 (mypy)
type_check:
  stage: type_check
  script:
    - pip install mypy
    - mypy --strict .

# 테스트 실행 (pytest)
test:
  stage: test
  script:
    - pip install pytest pytest-cov
    - pytest --cov=. --cov-report=term --cov-report=xml
  coverage: '/TOTAL.*\s+(\d+%)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

# 커버리지 검증
coverage_check:
  stage: test
  script:
    - pip install pytest pytest-cov
    - pytest --cov=. --cov-report=term
    - coverage_result=$(python -c "import xml.etree.ElementTree as ET; tree = ET.parse('coverage.xml'); root = tree.getroot(); print(float(root.attrib['line-rate']) * 100)")
    - echo "Coverage is $coverage_result%"
    - |
      if (( $(echo "$coverage_result < 80" | bc -l) )); then
        echo "Coverage is below 80%"
        exit 1
      else
        echo "Coverage is at or above 80%"
      fi
  needs:
    - test
